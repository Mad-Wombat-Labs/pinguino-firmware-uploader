# Workflow to build the windows package (for now)

name: Tests

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-windows:
    # The type of runner that the job will run on
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.9]   # try later with 3.7 to see if we can
                              # drop this
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup up ${{ matrix.python-version}}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version}}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyusb
          if ( Test-Path -Path requirements.txt ) { pip install -r requirements.txt }
        
      - name: Lint with flake8 # from github example
        run: |
          # install it
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Install pyinstaller
        run: |
          pip install pyinstaller

      - name: Run pyinstaller
        run: |
          pyinstaller -y FirmwareUploader.spec

      - name: Download Marquee
        uses: carlosperate/download-file-action@v1.0.3
        with:
          file-url: https://nsis.sourceforge.io/mediawiki/images/1/13/Marquee.zip
          file-name: marquee.zip
          location: ${{ github.workspace }}
          
      - name: Download NSISunzip
        uses: carlosperate/download-file-action@v1.0.3
        with:
          file-url: https://nsis.sourceforge.io/mediawiki/images/5/5a/NSISunzU.zip
          file-name: nsisunzU.zip
          location: ${{ github.workspace }}
          
      - name: Make plugins dir
        shell: bash
        run: |
          mkdir -p ${{ github.workspace }}/nsis-plugins/x86-ansi
          mkdir ${{ github.workspace }}/nsis-plugins/x86-unicode
          7z x -o"${{ github.workspace }}/nsis-plugins/x86-ansi/" "${{ github.workspace }}/marquee.zip"
          7z x -o"${{ github.workspace }}" "${{ github.workspace }}/nsisunzU.zip"
          ls -R "${{ github.workspace }}"
          mv "${{ github.workspace }}/NSISunzU/Plugin unicode/nsisunz.dll" "${{ github.workspace }}/nsis-plugins/x86-unicode"

      - name: Create nsis installer
        uses: joncloud/makensis-action@v3.3
        with:
          additional-plugin-paths: ${{ github.workspace }}/nsis-plugins
          script-file: ${{ github.workspace }}/windows/installer.nsi
